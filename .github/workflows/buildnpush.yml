# # Name of the workflow
# name: Build and Push Docker Images

# # This workflow runs when there is a push to the 'main' branch
# on:
#   push:
#     branches:
#       - main

# # Define the jobs to be executed
# jobs:
#   build:
#     # The job runs on the latest version of Ubuntu
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Checkout the repository
#       # This action pulls the latest code from the repository into the runner environment
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # Step 2: Set up Docker Buildx
#       # Buildx is an advanced Docker CLI plugin that helps in building multi-platform images
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       # Step 3: Login to DockerHub
#       # This step logs into DockerHub using credentials stored as GitHub secrets
#       - name: Login to DockerHub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}  # DockerHub username stored in GitHub secrets
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}  # DockerHub password stored in GitHub secrets

#       # Step 4: Build and push the first Docker image
#       # This step builds a Docker image from the 'SImple_Docker_Image' directory and pushes it to DockerHub
#       - name: Build and push Docker image 1
#         uses: docker/build-push-action@v5
#         with:
#           context: ./SImple_Docker_Image  # Path to the directory containing the first Dockerfile
#           push: true  # Push the built image to DockerHub
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/proj1-image1:latest  # Name and tag of the image on DockerHub
#           cache-from: type=gha  # Use GitHub Actions cache to speed up builds
#           cache-to: type=gha,mode=max  # Store cache for future builds

#       # Step 5: Build and push the second Docker image
#       # This step builds a Docker image from the 'node-postgres-docker' directory and pushes it to DockerHub
#       - name: Build and push Docker image 2
#         uses: docker/build-push-action@v5
#         with:
#           context: ./node-postgres-docker  # Path to the directory containing the second Dockerfile
#           push: true  # Push the built image to DockerHub
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/proj1-image2:latest  # Name and tag of the image on DockerHub
#           cache-from: type=gha  # Use GitHub Actions cache to speed up builds
#           cache-to: type=gha,mode=max  # Store cache for future builds
